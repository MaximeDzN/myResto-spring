---
- hosts: all
  become: true
  pre_tasks:
    - name: install dependencies docker 
      command: "sudo amazon-linux-extras install -y  docker"
    - name: install dependencies docker
      command: "sudo yum install -y docker"
    - name: start docker
      command: "sudo service docker start"
    - name: enable docker
      command: "sudo systemctl enable docker"
    - name: ajout droit docker a ec2
      command: "sudo usermod -a -G docker ec2-user"
    - name: install docker-compose
      shell: 'sudo curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
    - name: ajout droit docker-compose
      command: "sudo chmod +x /usr/local/bin/docker-compose" 
    # - name: install dependencies
    #   yum:
    #     name: "docker"
    #     state: "present"
    # - name: install dependencies
    #   yum:
    #     name: "docker-compose"
    #     state: "present"
    # - name: Update all packages
    #   yum:
    #     name: '*'
    #     state: latest
    #     update_only: yes

    # - name: Ensure a list of yum packages are installed
    #   yum:
    #     name: "{{ packages }}"
    #     state: latest
    #     update_cache: yes
    #   vars:
    #     packages:
    #     - python-pip
    #     - yum-utils
    #     - device-mapper-persistent-data
    #     - lvm2
    #     - amazon-linux-extras

    # - name: Add extras repository
    #   shell: yum-config-manager --enable extras

    # - name: Enable Some packages from amazon-linux-extras packages
    #   shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    # - name: clean yum metadata cache
    #   command: yum clean metadata
    #   args:
    #     warn: false

    # - name: Ensure a list of yum packages are installed
    #   yum:
    #     name: "{{ packages }}"
    #     state: latest
    #     update_cache: yes
    #   vars:
    #     packages:
    #     - python3.8
    #     - ansible
    #     - docker

    # - name: Enable Docker CE service at startup
    #   service:
    #     name: docker
    #     state: started
    #     enabled: yes

    # - name: Upgrade pip3
    #   shell: "python3.8 -m pip install pip --upgrade"

    # - name: Ensure Python pip packages are installed
    #   pip:
    #     name: "{{ packages }}"
    #     executable: /usr/local/bin/pip3.8
    #   vars:
    #     packages:
    #     - boto
    #     - boto3
    #     - docker-compose
    # - name: "Add access for docker"
    #   shell: "sudo gpasswd -a $USER docker && newgrp docker"
  tasks:
    - name: "Download data from git repo"
      git:
        repo: 'https://github.com/MaximeDzN/myResto-spring.git'
        version: 'DevOps'
        dest: '/home/ec2-user/myResto-spring'
        
    # - name: "create volume"
    #   command: "sudo mkdir /ebsMyResto"
      
    # - name: "mount volume"
    #   command: "sudo mount /dev/xvdf /ebsMyResto/"

    # - name: "Build an image for MyResto"
    #   command: "sudo docker build -f /home/ec2-user/myResto-spring/Docker/Dockerfile -t myresto ."
      
    # - name: "test droit"
    #   command: "sudo gpasswd -a $USER docker"

    # - name: "adding group"
    #   command: "newgrp docker"
    
    # - name: deploy Docker Compose stack
    #   docker_compose:
    #     project_src: /home/ec2-user/myResto-spring/Docker/
    #     files:
    #     - docker-compose.yaml

    # - name: "docker-compose up database"
    #   command: "docker-compose -f /home/ec2-user/myResto-spring/Docker/docker-compose.yaml up -d docker-mysql"

    # - name: "docker-compose up for phpmyadmin and springboot app"
    #   command: "docker-compose -f /home/ec2-user/myResto-spring/Docker/docker-compose.yaml up -d phpmyadmin"
